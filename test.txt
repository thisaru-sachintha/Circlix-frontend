import React, { useEffect, useState } from "react";
import axios from "axios";
import ItemCardSmall from "./ItemCardSmall"; // your existing card component

function PostManager() {
  const [posts, setPosts] = useState([]);
  const [editPost, setEditPost] = useState(null);
  const [bidValue, setBidValue] = useState("");

  // Fetch posts from API
  const fetchPosts = async () => {
    try {
      const token = localStorage.getItem("token");
      const { data } = await axios.get("http://localhost:8080/api/v1/posts", {
        headers: { Authorization: `Bearer ${token}` },
      });
      setPosts(data);
    } catch (err) {
      console.error("Error fetching posts:", err);
    }
  };

  // Delete post by ID
  const handleDelete = async (postId) => {
    try {
      const token = localStorage.getItem("token");
      await axios.delete(`http://localhost:8080/api/v1/posts/${postId}`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      alert("Post deleted!");
      fetchPosts(); // refresh list
    } catch (err) {
      console.error("Error deleting post:", err);
    }
  };

  // Edit post
  const handleEdit = async () => {
    try {
      const token = localStorage.getItem("token");
      await axios.put(
        `http://localhost:8080/api/v1/posts/${editPost.id}`,
        editPost,
        {
          headers: { Authorization: `Bearer ${token}` },
        }
      );
      alert("Post updated!");
      setEditPost(null);
      fetchPosts();
    } catch (err) {
      console.error("Error editing post:", err);
    }
  };

  // Bid on post
  const handleBid = async (postId, bidLimit) => {
    const bid = parseFloat(bidValue);
    if (isNaN(bid) || bid <= bidLimit) {
      alert(`Bid must be greater than ${bidLimit}`);
      return;
    }

    try {
      const token = localStorage.getItem("token");
      await axios.post(
        `http://localhost:8080/api/v1/posts/${postId}/bid`,
        { bidAmount: bid },
        {
          headers: { Authorization: `Bearer ${token}` },
        }
      );
      alert("Bid placed!");
      setBidValue("");
      fetchPosts();
    } catch (err) {
      console.error("Error placing bid:", err);
    }
  };

  useEffect(() => {
    fetchPosts();
  }, []);

  return (
    <div className="container">
      <h2 className="my-3">All Posts</h2>
      <div className="row">
        {posts.map((post) => (
          <div key={post.id} className="col-md-4 mb-4">
            <ItemCardSmall
              title={post.itemName}
              description={post.description}
              image={post.imageUrl}
              category={post.category}
              bidLimit={post.bidLimit}
              status={post.status}
            />
            <div className="d-flex justify-content-between mt-2">
              <button
                className="btn btn-danger"
                onClick={() => handleDelete(post.id)}
              >
                Delete
              </button>
              <button
                className="btn btn-warning"
                onClick={() => setEditPost(post)}
              >
                Edit
              </button>
            </div>
            <div className="mt-2">
              <input
                type="number"
                className="form-control"
                placeholder={`Bid > ${post.bidLimit}`}
                value={bidValue}
                onChange={(e) => setBidValue(e.target.value)}
              />
              <button
                className="btn btn-primary mt-1"
                onClick={() => handleBid(post.id, post.bidLimit)}
              >
                Place Bid
              </button>
            </div>
          </div>
        ))}
      </div>

      {/* Edit Modal (simplified inline form) */}
      {editPost && (
        <div className="modal show d-block bg-dark bg-opacity-50">
          <div className="modal-dialog">
            <div className="modal-content p-3">
              <h5>Edit Post</h5>
              <input
                type="text"
                className="form-control mb-2"
                value={editPost.itemName}
                onChange={(e) =>
                  setEditPost({ ...editPost, itemName: e.target.value })
                }
              />
              <textarea
                className="form-control mb-2"
                value={editPost.description}
                onChange={(e) =>
                  setEditPost({ ...editPost, description: e.target.value })
                }
              />
              <button className="btn btn-success me-2" onClick={handleEdit}>
                Save
              </button>
              <button
                className="btn btn-secondary"
                onClick={() => setEditPost(null)}
              >
                Cancel
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}

export default PostManager;


///////////////////////////////////////////////

import React, { useEffect, useState } from "react";
import axios from "axios";
import ItemCardSmall from "./ItemCardSmall"; // Your reusable card component

function PostList() {
  const [posts, setPosts] = useState([]);

  // Fetch posts from API
  const fetchPosts = async () => {
    try {
      const token = localStorage.getItem("token");
      const { data } = await axios.get("http://localhost:8080/api/v1/posts", {
        headers: { Authorization: `Bearer ${token}` },
      });
      setPosts(data); // assuming data is an array of posts
    } catch (error) {
      console.error("Failed to fetch posts:", error);
    }
  };

  useEffect(() => {
    fetchPosts();
  }, []);

  return (
    <div className="container mt-4">
      <h3>All Posts</h3>
      <div className="row">
        {posts.map((post) => (
          <div key={post.id} className="col-md-4 mb-4">
            <ItemCardSmall
              title={post.itemName}
              description={post.description}
              image={post.imageUrl}
              category={post.category}
              bidLimit={post.bidLimit}
              status={post.status}
            />
          </div>
        ))}
      </div>
    </div>
  );
}

export default PostList;

////////////////////////////////////////////////////////

import React from "react";

function ItemCardSmall({ title, description, image, category, bidLimit, status }) {
  return (
    <div className="card h-100">
      <img src={image} className="card-img-top" alt={title} />
      <div className="card-body">
        <h5 className="card-title">{title}</h5>
        <p className="card-text">{description}</p>
        <p><strong>Category:</strong> {category}</p>
        <p><strong>Bid Limit:</strong> ${bidLimit}</p>
        <p><strong>Status:</strong> {status}</p>
      </div>
    </div>
  );
}

export default ItemCardSmall;
